var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.481,1,1.689]],["body/controllers/AppController.html",[0,2.012,1,2.294,2,1.478,3,0.408,4,0.343,5,0.343,6,2.293,7,0.343,8,1.103,9,3.547,10,2.821,11,2.799,12,1.686,13,0.047,14,0.551,15,2.821,16,0.81,17,0.81,18,0.408,19,0.716,20,4.364,21,0.81,22,0.737,23,2.293,24,0.63,25,1.306,26,2.02,27,2.293,28,0.408,29,0.07,30,1.945,31,1.478,32,2.293,33,1.029,34,1.791,35,3.839,36,2.821,37,2.821,38,2.821,39,1.945,40,2.821,41,0.031,42,0.031]],["title/modules/AppModule.html",[43,1.689,44,1.689]],["body/modules/AppModule.html",[1,2.672,2,2.078,3,0.428,4,0.36,5,0.36,13,0.046,22,0.842,24,0.661,26,2.373,27,2.405,28,0.428,29,0.073,41,0.032,42,0.032,43,2.369,44,3.18,45,1.551,46,2.078,47,2.405,48,2.405,49,2.405,50,2.686,51,2.734,52,2.04,53,2.04,54,2.959,55,3.223,56,3.223,57,2.959,58,2.959,59,2.405,60,1.768,61,2.959]],["title/injectables/AppService.html",[26,1.308,62,0.718]],["body/injectables/AppService.html",[3,0.491,4,0.413,5,0.413,7,0.413,8,1.246,13,0.046,14,0.663,18,0.491,21,0.975,22,0.574,24,0.758,26,2.008,28,0.491,29,0.084,32,4.095,33,1.238,34,1.394,39,2.992,41,0.035,42,0.035,62,1.102,63,1.572,64,2.76,65,3.396,66,3.396,67,2.593,68,1.78,69,3.396,70,3.396,71,2.76]],["title/injectables/AuditMiddleware.html",[62,0.718,72,1.689]],["body/injectables/AuditMiddleware.html",[3,0.417,4,0.351,5,0.351,7,0.351,8,1.119,11,2.824,13,0.045,14,0.562,16,0.828,17,0.828,18,0.417,19,0.732,21,0.828,22,0.658,24,0.644,25,1.334,28,0.417,29,0.071,41,0.031,42,0.031,62,0.989,63,1.334,72,2.328,73,2.343,74,3.895,75,3.895,76,2.726,77,4.412,78,3.841,79,4.725,80,2.882,81,1.987,82,1.722,83,3.895,84,1.334,85,4.412,86,3.043,87,2.882,88,2.882,89,1.722,90,2.882,91,2.882,92,2.882]],["title/classes/HttpExceptionFilter.html",[29,0.07,93,1.689]],["body/classes/HttpExceptionFilter.html",[3,0.403,4,0.339,5,0.339,7,0.339,8,1.093,11,2.274,13,0.045,14,0.544,16,0.8,17,0.8,18,0.403,19,0.707,21,0.8,22,0.643,24,0.622,25,1.289,28,0.403,29,0.069,41,0.031,42,0.031,67,2.274,76,1.995,82,1.665,84,1.762,89,1.665,93,2.274,94,1.289,95,3.094,96,1.921,97,3.524,98,2.99,99,3.094,100,3.213,101,2.99,102,3.788,103,2.786,104,2.264,105,2.786,106,2.442,107,1.665,108,2.264,109,1.921,110,2.264,111,2.264,112,2.264,113,2.264,114,2.264,115,1.143,116,2.264,117,2.264,118,2.264,119,2.786,120,2.264]],["title/interfaces/Job.html",[121,1.689,122,1.16]],["body/interfaces/Job.html",[3,0.499,4,0.42,5,0.42,7,0.42,13,0.044,18,0.696,19,1.112,28,0.499,33,1.949,41,0.035,42,0.035,68,2.524,121,2.061,122,1.798,123,3.449,124,2.803,125,2.618,126,3.494,127,2.655,128,2.655]],["title/classes/JobDTO.html",[29,0.07,129,1.308]],["body/classes/JobDTO.html",[3,0.474,4,0.399,5,0.399,7,0.399,12,2.535,13,0.045,14,0.828,18,0.613,22,0.554,28,0.474,29,0.105,31,2.764,33,1.547,41,0.034,42,0.034,68,2.223,94,1.518,125,2.535,127,2.464,128,2.464,129,1.964,130,2.665,131,4.702,132,3.279,133,4.702,134,3.279,135,2.665]],["title/classes/JobEntity.html",[29,0.07,136,1.689]],["body/classes/JobEntity.html",[3,0.406,4,0.342,5,0.342,7,0.342,12,2.287,13,0.044,14,0.747,18,0.676,22,0.475,28,0.406,29,0.069,31,2.646,33,1.705,41,0.031,42,0.031,68,2.45,94,1.3,122,1.919,125,2.287,127,2.564,128,2.564,136,2.287,137,2.283,138,3.828,139,3.225,140,3.828,141,4.676,142,3.801,143,3.828,144,2.809,145,3.828,146,3.828,147,2.809,148,4.354,149,1.937]],["title/classes/JobListDTO.html",[29,0.07,150,1.689]],["body/classes/JobListDTO.html",[3,0.496,4,0.417,5,0.417,7,0.417,13,0.045,14,0.852,16,0.985,17,0.985,18,0.631,19,0.871,22,0.58,28,0.496,29,0.085,41,0.035,42,0.035,94,1.588,125,2.61,129,2.417,150,2.61,151,2.789,152,4.367,153,3.488,154,2.366,155,3.431,156,3.431,157,3.431,158,3.431,159,3.431]],["title/controllers/JobsController.html",[0,1.481,160,1.689]],["body/controllers/JobsController.html",[0,0.579,2,0.579,3,0.16,4,0.134,5,0.134,7,0.134,8,0.536,9,2.315,12,1.902,13,0.046,14,0.621,16,0.818,17,0.818,18,0.499,19,0.723,21,0.914,22,0.771,23,0.898,24,0.417,28,0.16,29,0.027,30,0.762,31,0.579,33,1.467,34,1.509,41,0.015,42,0.015,67,2.197,71,2.315,86,1.671,93,1.115,98,0.762,100,0.762,115,1.169,122,1.417,126,2.664,127,0.579,128,0.579,129,1.702,136,1.702,139,3.285,149,0.762,150,0.66,153,0.762,160,1.115,161,0.898,162,1.105,163,1.97,164,1.517,165,1.97,166,1.105,167,1.105,168,4.16,169,4.16,170,1.105,171,4.16,172,1.866,173,1.105,174,1.448,175,1.105,176,1.964,177,2.774,178,0.898,179,1.105,180,1.105,181,3.453,182,1.105,183,1.517,184,1.105,185,1.866,186,1.105,187,1.105,188,1.105,189,1.866,190,1.105,191,1.105,192,0.898,193,1.105,194,1.105,195,1.105,196,1.105,197,1.105,198,1.866,199,1.105,200,1.105,201,1.866,202,1.866,203,1.105,204,1.105,205,1.105,206,1.105,207,2.423,208,1.105,209,3.182,210,3.453,211,1.866,212,2.423,213,1.105,214,1.287,215,0.898,216,1.122,217,0.898,218,0.898,219,1.105,220,1.105,221,1.866,222,1.115,223,1.105,224,1.105,225,1.105,226,1.115,227,1.105,228,1.105,229,1.105,230,1.105,231,1.866,232,1.105,233,1.105,234,0.898,235,1.105,236,1.866,237,1.105,238,1.105,239,1.105,240,1.105,241,1.105,242,1.105,243,1.105,244,1.105,245,1.866,246,1.517,247,1.866,248,1.866,249,1.866,250,1.105,251,1.105,252,1.105,253,1.105,254,1.105,255,1.105,256,0.898,257,1.105,258,1.105,259,1.105,260,1.105,261,1.105,262,1.105,263,1.105,264,1.105,265,1.105,266,1.105,267,1.105,268,1.105,269,1.105]],["title/modules/JobsModule.html",[43,1.689,50,1.481]],["body/modules/JobsModule.html",[2,1.724,3,0.327,4,0.276,5,0.276,8,0.651,13,0.046,14,0.442,16,0.651,17,0.945,18,0.476,19,0.575,21,0.651,22,0.841,24,0.506,28,0.327,29,0.056,41,0.026,42,0.026,43,1.966,45,1.187,46,1.724,50,2.468,51,2.268,52,1.562,53,1.562,55,2.674,56,1.841,59,1.841,60,1.353,72,1.353,82,1.353,84,1.048,89,1.353,101,1.562,122,0.93,153,1.562,160,2.315,216,2.18,217,1.841,270,1.841,271,1.841,272,2.265,273,2.265,274,3.289,275,4.251,276,2.265,277,3.289,278,2.265,279,2.674,280,3.289,281,1.841,282,1.841,283,2.674,284,3.289,285,2.265,286,2.265,287,2.265,288,2.268,289,2.265,290,2.265,291,2.265,292,1.353,293,3.289,294,2.265,295,1.841,296,2.265,297,2.265,298,2.265,299,2.265,300,2.265,301,2.265,302,2.265,303,2.265,304,2.265,305,2.265]],["title/injectables/JobsService.html",[62,0.718,216,1.308]],["body/injectables/JobsService.html",[3,0.277,4,0.233,5,0.233,7,0.233,8,0.834,13,0.046,14,0.864,16,1.208,17,1.208,18,0.608,19,1.068,21,1.208,22,0.711,24,0.427,28,0.277,29,0.047,31,1.003,33,1.769,34,1.727,41,0.023,42,0.023,60,1.144,62,0.737,63,0.886,86,2.002,115,0.786,122,1.818,126,2.699,129,2.13,154,1.32,163,2.359,164,2.359,165,2.359,177,3.412,178,2.359,183,2.359,192,2.359,215,1.556,216,1.344,218,1.556,234,3.181,256,1.556,306,1.556,307,5.257,308,1.914,309,3.914,310,1.914,311,2.903,312,2.903,313,1.914,314,1.914,315,1.914,316,1.914,317,1.914,318,1.914,319,1.556,320,1.914,321,1.914,322,4.207,323,1.914,324,1.914,325,1.914,326,1.914,327,1.914,328,1.914,329,1.914]],["title/injectables/JoiValidationPipe.html",[62,0.718,226,1.689]],["body/injectables/JoiValidationPipe.html",[3,0.408,4,0.343,5,0.343,7,0.343,8,1.103,13,0.046,14,0.749,16,1.103,17,1.103,18,0.555,19,0.975,21,0.81,22,0.649,24,0.63,28,0.408,29,0.07,30,1.945,34,1.158,41,0.031,42,0.031,62,0.975,63,1.306,84,1.306,106,1.478,115,1.158,120,3.807,154,1.945,214,1.945,226,2.294,246,2.293,292,2.294,330,2.293,331,3.839,332,2.821,333,4.684,334,2.821,335,3.839,336,2.821,337,3.807,338,3.839,339,2.821,340,2.293,341,2.293,342,2.821,343,2.821,344,2.821,345,2.821,346,2.821]],["title/injectables/LoggingInterceptor.html",[62,0.718,222,1.689]],["body/injectables/LoggingInterceptor.html",[3,0.388,4,0.327,5,0.327,7,0.327,8,1.066,13,0.046,14,0.524,16,0.771,17,0.771,18,0.388,19,0.682,21,0.771,22,0.775,24,0.6,25,1.243,28,0.388,29,0.066,34,1.102,41,0.03,42,0.03,62,0.942,63,1.243,76,1.945,78,3.729,81,1.851,84,1.243,106,2.229,107,1.604,109,1.851,177,2.559,222,2.217,347,2.182,348,4.252,349,2.685,350,3.729,351,4.587,352,2.685,353,3.711,354,4.252,355,3.711,356,2.182,357,2.685,358,2.685,359,2.685,360,2.685,361,2.685,362,2.685,363,2.685,364,2.685,365,2.685,366,2.685,367,2.685,368,2.685,369,2.685,370,2.685]],["title/classes/ValidationExceptionFilter.html",[29,0.07,174,1.689]],["body/classes/ValidationExceptionFilter.html",[3,0.388,4,0.327,5,0.327,7,0.327,8,1.066,11,2.217,13,0.046,14,0.524,16,0.771,17,0.771,18,0.388,19,0.682,21,0.771,22,0.627,24,0.6,25,1.243,28,0.388,29,0.066,39,2.559,41,0.03,42,0.03,67,2.217,76,1.945,82,1.604,84,1.718,89,1.604,94,1.243,96,1.851,97,3.457,98,2.933,99,3.016,100,3.163,101,2.933,102,3.729,104,3.457,106,2.523,107,1.604,108,2.182,109,1.851,110,2.182,111,2.182,112,2.182,113,2.182,114,2.182,115,1.102,116,2.182,117,2.182,118,2.182,174,2.217,340,2.182,341,2.182,371,3.016,372,2.685,373,2.685,374,2.685]],["title/coverage.html",[375,2.651]],["body/coverage.html",[0,1.867,1,1.513,5,0.308,6,2.058,13,0.045,18,0.366,26,1.172,29,0.116,41,0.029,42,0.029,62,1.196,64,2.058,72,1.513,73,2.058,93,1.513,95,2.058,96,2.456,115,1.039,121,1.513,122,1.039,124,2.058,129,1.172,130,2.058,136,1.513,137,2.058,150,1.513,151,2.058,160,1.513,161,2.058,174,1.513,176,1.746,216,1.172,222,1.513,226,1.513,288,1.746,292,1.513,306,2.058,330,2.058,347,2.058,371,2.058,375,1.746,376,2.532,377,2.532,378,2.532,379,5.557,380,4.888,381,2.058,382,4.121,383,4.472,384,4.472,385,2.532,386,2.532,387,2.532,388,2.895,389,2.058,390,2.532,391,2.058,392,2.532,393,2.532]],["title/dependencies.html",[46,1.78,394,2.367]],["body/dependencies.html",[13,0.046,24,0.692,25,1.891,29,0.101,41,0.033,42,0.033,46,1.623,60,1.85,135,2.517,149,2.135,214,2.135,279,3.321,281,3.321,282,3.321,283,2.517,319,2.517,356,2.517,395,4.573,396,3.096,397,3.096,398,3.096,399,3.096,400,3.096,401,3.096,402,3.096,403,3.096,404,3.096,405,3.096,406,3.096,407,3.096,408,3.096,409,3.096,410,4.086,411,3.096,412,3.096,413,3.096,414,3.096,415,3.096,416,3.096,417,3.096,418,3.096,419,3.096]],["title/miscellaneous/functions.html",[420,1.414,421,2.76]],["body/miscellaneous/functions.html",[7,0.512,13,0.04,41,0.04,42,0.04,389,3.423,391,4.275,420,2.517,421,3.423,422,4.211]],["title/index.html",[7,0.288,423,2.367,424,2.367]],["body/index.html",[4,0.335,13,0.045,41,0.03,42,0.03,139,1.897,375,1.897,425,2.751,426,2.751,427,3.774,428,2.751,429,2.751,430,2.751,431,2.751,432,2.751,433,2.751,434,4.307,435,2.751,436,2.751,437,2.751,438,2.751,439,5.138,440,2.751,441,2.751,442,2.751,443,5.017,444,2.751,445,2.751,446,3.774,447,2.751,448,2.751,449,2.751,450,2.751,451,3.774,452,3.774,453,2.751,454,2.751,455,2.751,456,3.774,457,3.774,458,2.751,459,2.751,460,2.751,461,2.751,462,2.751,463,2.236,464,2.751,465,2.751,466,2.751,467,2.751,468,2.751,469,2.751,470,2.751,471,2.751,472,2.751,473,2.751,474,2.751,475,2.751,476,2.751,477,2.751,478,2.751,479,2.751,480,2.751,481,2.751]],["title/modules.html",[45,2.014]],["body/modules.html",[13,0.039,41,0.039,42,0.039,44,2.47,45,2.166,50,2.166,463,3.98,482,4.896,483,4.896,484,4.896]],["title/overview.html",[485,3.125]],["body/overview.html",[2,1.817,13,0.042,26,2.234,41,0.035,42,0.035,44,3.199,45,1.817,46,2.304,47,2.818,48,2.818,49,2.818,50,2.745,51,3.032,52,2.391,53,2.391,63,1.605,94,1.605,121,2.072,216,2.234,270,2.818,271,2.818,295,3.573,485,2.818,486,4.396,487,3.467]],["title/miscellaneous/variables.html",[420,1.414,488,2.76]],["body/miscellaneous/variables.html",[7,0.399,13,0.046,33,1.547,34,1.346,41,0.034,42,0.034,68,1.718,76,1.718,81,2.261,106,1.718,107,1.959,115,1.346,127,1.718,128,1.718,142,3.822,176,2.925,288,2.925,292,2.81,337,3.822,350,2.665,381,2.665,388,2.665,420,1.959,488,2.665,489,3.279,490,4.242,491,3.279,492,4.242,493,3.279,494,4.242,495,3.279,496,3.279]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Job.html":{},"classes/JobDTO.html":{},"classes/JobEntity.html":{},"classes/JobListDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":379,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":383,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":380,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":384,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":385,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":386,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":387,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":487,"title":{},"body":{"overview.html":{}}}],["10",{"_index":297,"title":{},"body":{"modules/JobsModule.html":{}}}],["17.6.0",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":486,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":71,"title":{},"body":{"injectables/AppService.html":{},"controllers/JobsController.html":{}}}],["3.0.2",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":400,"title":{},"body":{"dependencies.html":{}}}],["4.0.3",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["403",{"_index":171,"title":{},"body":{"controllers/JobsController.html":{}}}],["5",{"_index":295,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["5.2.0",{"_index":399,"title":{},"body":{"dependencies.html":{}}}],["5000",{"_index":143,"title":{},"body":{"classes/JobEntity.html":{}}}],["6.2.0",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["6379",{"_index":301,"title":{},"body":{"modules/JobsModule.html":{}}}],["7.2.0",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":395,"title":{},"body":{"dependencies.html":{}}}],["9.0.2",{"_index":397,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":325,"title":{},"body":{"injectables/JobsService.html":{}}}],["_res",{"_index":77,"title":{},"body":{"injectables/AuditMiddleware.html":{}}}],["amazing",{"_index":464,"title":{},"body":{"index.html":{}}}],["apibody",{"_index":212,"title":{},"body":{"controllers/JobsController.html":{}}}],["apicreatedresponse",{"_index":211,"title":{},"body":{"controllers/JobsController.html":{}}}],["apiforbiddenresponse",{"_index":210,"title":{},"body":{"controllers/JobsController.html":{}}}],["apiokresponse",{"_index":209,"title":{},"body":{"controllers/JobsController.html":{}}}],["apiproperty",{"_index":148,"title":{},"body":{"classes/JobEntity.html":{}}}],["apiproperty({type",{"_index":138,"title":{},"body":{"classes/JobEntity.html":{}}}],["apitags",{"_index":208,"title":{},"body":{"controllers/JobsController.html":{}}}],["apitags('jobs",{"_index":228,"title":{},"body":{"controllers/JobsController.html":{}}}],["app",{"_index":441,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":433,"title":{},"body":{"index.html":{}}}],["apply(auditmiddleware",{"_index":302,"title":{},"body":{"modules/JobsModule.html":{}}}],["appmodule",{"_index":44,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":26,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":339,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["argumentshost",{"_index":102,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["async",{"_index":307,"title":{},"body":{"injectables/JobsService.html":{}}}],["auditmiddleware",{"_index":72,"title":{"injectables/AuditMiddleware.html":{}},"body":{"injectables/AuditMiddleware.html":{},"modules/JobsModule.html":{},"coverage.html":{}}}],["author",{"_index":474,"title":{},"body":{"index.html":{}}}],["await",{"_index":322,"title":{},"body":{"injectables/JobsService.html":{}}}],["backers",{"_index":465,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":340,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"classes/ValidationExceptionFilter.html":{}}}],["badrequestexception('validation",{"_index":345,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["body",{"_index":196,"title":{},"body":{"controllers/JobsController.html":{}}}],["body(new",{"_index":262,"title":{},"body":{"controllers/JobsController.html":{}}}],["bootstrap",{"_index":391,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":484,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":482,"title":{},"body":{"modules.html":{}}}],["building",{"_index":428,"title":{},"body":{"index.html":{}}}],["cache",{"_index":281,"title":{},"body":{"modules/JobsModule.html":{},"dependencies.html":{}}}],["cacheinterceptor",{"_index":204,"title":{},"body":{"controllers/JobsController.html":{}}}],["cachekey",{"_index":205,"title":{},"body":{"controllers/JobsController.html":{}}}],["cachekey('alljobs",{"_index":232,"title":{},"body":{"controllers/JobsController.html":{}}}],["cachemodule",{"_index":286,"title":{},"body":{"modules/JobsModule.html":{}}}],["cachemodule.register",{"_index":293,"title":{},"body":{"modules/JobsModule.html":{}}}],["cachettl",{"_index":206,"title":{},"body":{"controllers/JobsController.html":{}}}],["cachettl(15",{"_index":233,"title":{},"body":{"controllers/JobsController.html":{}}}],["cachettl(30",{"_index":241,"title":{},"body":{"controllers/JobsController.html":{}}}],["callhandler",{"_index":351,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["catch",{"_index":98,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"classes/ValidationExceptionFilter.html":{}}}],["catch(badrequestexception",{"_index":373,"title":{},"body":{"classes/ValidationExceptionFilter.html":{}}}],["catch(exception",{"_index":99,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["catch(httpexception",{"_index":105,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["class",{"_index":29,"title":{"classes/HttpExceptionFilter.html":{},"classes/JobDTO.html":{},"classes/JobEntity.html":{},"classes/JobListDTO.html":{},"classes/ValidationExceptionFilter.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"classes/JobDTO.html":{},"classes/JobEntity.html":{},"classes/JobListDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":94,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/JobDTO.html":{},"classes/JobEntity.html":{},"classes/JobListDTO.html":{},"classes/ValidationExceptionFilter.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_jobsmodule",{"_index":270,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":271,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["configure",{"_index":273,"title":{},"body":{"modules/JobsModule.html":{}}}],["configure(consumer",{"_index":274,"title":{},"body":{"modules/JobsModule.html":{}}}],["console.log",{"_index":341,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"classes/ValidationExceptionFilter.html":{}}}],["console.log('before",{"_index":364,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["console.log('create",{"_index":257,"title":{},"body":{"controllers/JobsController.html":{}}}],["console.log('delete",{"_index":268,"title":{},"body":{"controllers/JobsController.html":{}}}],["console.log('here",{"_index":344,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["console.log('update",{"_index":263,"title":{},"body":{"controllers/JobsController.html":{}}}],["console.log(`after...${date.now",{"_index":369,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["console.log(`endpoint",{"_index":360,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["console.log(`logging",{"_index":85,"title":{},"body":{"injectables/AuditMiddleware.html":{}}}],["console.log(`method",{"_index":362,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["const",{"_index":106,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":154,"title":{},"body":{"classes/JobListDTO.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{}}}],["constructor(@injectmodel('job",{"_index":320,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(jobmodel",{"_index":308,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(jobs",{"_index":155,"title":{},"body":{"classes/JobListDTO.html":{}}}],["constructor(private",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/JobsController.html":{},"injectables/JoiValidationPipe.html":{}}}],["constructor(public",{"_index":159,"title":{},"body":{"classes/JobListDTO.html":{}}}],["constructor(schema",{"_index":332,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["consumer",{"_index":277,"title":{},"body":{"modules/JobsModule.html":{}}}],["context",{"_index":353,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["context.switchtohttp",{"_index":359,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/JobsController.html":{}},"body":{"controllers/AppController.html":{},"controllers/JobsController.html":{},"coverage.html":{}}}],["controller('jobs",{"_index":229,"title":{},"body":{"controllers/JobsController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"overview.html":{}}}],["coverage",{"_index":375,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":163,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["create(job",{"_index":312,"title":{},"body":{"injectables/JobsService.html":{}}}],["create(jobdata",{"_index":166,"title":{},"body":{"controllers/JobsController.html":{}}}],["created",{"_index":250,"title":{},"body":{"controllers/JobsController.html":{}}}],["created.'})@apiforbiddenresponse({status",{"_index":170,"title":{},"body":{"controllers/JobsController.html":{}}}],["createparamdecorator",{"_index":491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx",{"_index":107,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getrequest",{"_index":109,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":110,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date().toisostring",{"_index":116,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["date.now",{"_index":366,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"classes/JobDTO.html":{},"classes/JobEntity.html":{},"controllers/JobsController.html":{}}}],["decorators/jobdata.decorator",{"_index":219,"title":{},"body":{"controllers/JobsController.html":{}}}],["default",{"_index":142,"title":{},"body":{"classes/JobEntity.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"classes/JobDTO.html":{},"classes/JobEntity.html":{},"classes/JobListDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{}}}],["delete",{"_index":86,"title":{},"body":{"injectables/AuditMiddleware.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["delete(':id",{"_index":265,"title":{},"body":{"controllers/JobsController.html":{}}}],["delete(':id')@apiokresponse({description",{"_index":179,"title":{},"body":{"controllers/JobsController.html":{}}}],["delete(@param('id",{"_index":267,"title":{},"body":{"controllers/JobsController.html":{}}}],["delete(id",{"_index":178,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["dependencies",{"_index":46,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":118,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["description",{"_index":139,"title":{},"body":{"classes/JobEntity.html":{},"controllers/JobsController.html":{},"index.html":{}}}],["developer",{"_index":146,"title":{},"body":{"classes/JobEntity.html":{}}}],["development",{"_index":442,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["dtos/job.dto",{"_index":215,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["dtos/joblist.dto",{"_index":224,"title":{},"body":{"controllers/JobsController.html":{}}}],["e2e",{"_index":453,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":429,"title":{},"body":{"index.html":{}}}],["entities/job.entity",{"_index":213,"title":{},"body":{"controllers/JobsController.html":{}}}],["error",{"_index":120,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/JoiValidationPipe.html":{}}}],["exception",{"_index":104,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["exception.filter",{"_index":221,"title":{},"body":{"controllers/JobsController.html":{}}}],["exception.filter.ts",{"_index":96,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:11",{"_index":103,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts:12",{"_index":372,"title":{},"body":{"classes/ValidationExceptionFilter.html":{}}}],["exception.getstatus",{"_index":111,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["exception.message",{"_index":374,"title":{},"body":{"classes/ValidationExceptionFilter.html":{}}}],["exceptionfilter",{"_index":97,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["exec",{"_index":326,"title":{},"body":{"injectables/JobsService.html":{}}}],["executioncontext",{"_index":350,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Job.html":{},"classes/JobDTO.html":{},"classes/JobEntity.html":{},"classes/JobListDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{}}}],["express",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{},"dependencies.html":{}}}],["failed",{"_index":346,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Job.html":{},"classes/JobDTO.html":{},"classes/JobEntity.html":{},"classes/JobListDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{},"coverage.html":{}}}],["filters/http",{"_index":225,"title":{},"body":{"controllers/JobsController.html":{}}}],["filters/validation",{"_index":220,"title":{},"body":{"controllers/JobsController.html":{}}}],["find",{"_index":164,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["find(@param('id",{"_index":242,"title":{},"body":{"controllers/JobsController.html":{}}}],["find(id",{"_index":183,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["findall",{"_index":234,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["forbidden",{"_index":181,"title":{},"body":{"controllers/JobsController.html":{}}}],["forbidden.'})@apibody({type",{"_index":172,"title":{},"body":{"controllers/JobsController.html":{}}}],["forbidden.'})@cachettl(30",{"_index":186,"title":{},"body":{"controllers/JobsController.html":{}}}],["forbidden.'})@render('jobs/index",{"_index":190,"title":{},"body":{"controllers/JobsController.html":{}}}],["forroutes",{"_index":303,"title":{},"body":{"modules/JobsModule.html":{}}}],["found",{"_index":248,"title":{},"body":{"controllers/JobsController.html":{}}}],["framework",{"_index":427,"title":{},"body":{"index.html":{}}}],["function",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":421,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":240,"title":{},"body":{"controllers/JobsController.html":{}}}],["get(':id')@apiokresponse({status",{"_index":184,"title":{},"body":{"controllers/JobsController.html":{}}}],["get()@apiokresponse({status",{"_index":188,"title":{},"body":{"controllers/JobsController.html":{}}}],["gethello",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":423,"title":{"index.html":{}},"body":{}}],["grow",{"_index":460,"title":{},"body":{"index.html":{}}}],["handle",{"_index":367,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["hbs",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["headers",{"_index":91,"title":{},"body":{"injectables/AuditMiddleware.html":{}}}],["hello",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":471,"title":{},"body":{"index.html":{}}}],["host",{"_index":101,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"modules/JobsModule.html":{},"classes/ValidationExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":108,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["http",{"_index":119,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexception",{"_index":100,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"classes/ValidationExceptionFilter.html":{}}}],["httpexception('job",{"_index":247,"title":{},"body":{"controllers/JobsController.html":{}}}],["httpexceptionfilter",{"_index":93,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"coverage.html":{}}}],["https://nestjs.com",{"_index":478,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":200,"title":{},"body":{"controllers/JobsController.html":{}}}],["httpstatus.not_found",{"_index":249,"title":{},"body":{"controllers/JobsController.html":{}}}],["id",{"_index":126,"title":{},"body":{"interfaces/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["identifier",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":84,"title":{},"body":{"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"modules/JobsModule.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{}}}],["import",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"classes/JobDTO.html":{},"classes/JobEntity.html":{},"classes/JobListDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{}}}],["imports",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Job.html":{},"classes/JobDTO.html":{},"classes/JobEntity.html":{},"classes/JobListDTO.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Job.html":{},"classes/JobDTO.html":{},"classes/JobEntity.html":{},"classes/JobListDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{}}}],["injectable",{"_index":62,"title":{"injectables/AppService.html":{},"injectables/AuditMiddleware.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuditMiddleware.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":63,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuditMiddleware.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"overview.html":{}}}],["injectmodel",{"_index":318,"title":{},"body":{"injectables/JobsService.html":{}}}],["installation",{"_index":438,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":440,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":348,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["intercept(context",{"_index":349,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["interceptor/logging.interceptor",{"_index":223,"title":{},"body":{"controllers/JobsController.html":{}}}],["interface",{"_index":121,"title":{"interfaces/Job.html":{}},"body":{"interfaces/Job.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":123,"title":{},"body":{"interfaces/Job.html":{}}}],["interfaces/job.interface",{"_index":218,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["ip",{"_index":87,"title":{},"body":{"injectables/AuditMiddleware.html":{}}}],["isint",{"_index":131,"title":{},"body":{"classes/JobDTO.html":{}}}],["isstring",{"_index":133,"title":{},"body":{"classes/JobDTO.html":{}}}],["javascript",{"_index":145,"title":{},"body":{"classes/JobEntity.html":{}}}],["job",{"_index":122,"title":{"interfaces/Job.html":{}},"body":{"interfaces/Job.html":{},"classes/JobEntity.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{}}}],["job.dto",{"_index":158,"title":{},"body":{"classes/JobListDTO.html":{}}}],["jobdata",{"_index":176,"title":{},"body":{"controllers/JobsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jobdata(new",{"_index":254,"title":{},"body":{"controllers/JobsController.html":{}}}],["jobdto",{"_index":129,"title":{"classes/JobDTO.html":{}},"body":{"classes/JobDTO.html":{},"classes/JobListDTO.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"coverage.html":{}}}],["jobentity",{"_index":136,"title":{"classes/JobEntity.html":{}},"body":{"classes/JobEntity.html":{},"controllers/JobsController.html":{},"coverage.html":{}}}],["jobentity})@usefilters(new",{"_index":173,"title":{},"body":{"controllers/JobsController.html":{}}}],["joblistdto",{"_index":150,"title":{"classes/JobListDTO.html":{}},"body":{"classes/JobListDTO.html":{},"controllers/JobsController.html":{},"coverage.html":{}}}],["joblistdto(result",{"_index":239,"title":{},"body":{"controllers/JobsController.html":{}}}],["jobmodel",{"_index":311,"title":{},"body":{"injectables/JobsService.html":{}}}],["jobs",{"_index":153,"title":{},"body":{"classes/JobListDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs.controller",{"_index":287,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":217,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/jobs.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["jobschema",{"_index":288,"title":{},"body":{"modules/JobsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jobscontroller",{"_index":160,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"coverage.html":{}}}],["jobsmodule",{"_index":50,"title":{"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsservice",{"_index":216,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"overview.html":{}}}],["joi",{"_index":214,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JoiValidationPipe.html":{},"dependencies.html":{}}}],["joi.number().integer().min(400).max(5000).required",{"_index":253,"title":{},"body":{"controllers/JobsController.html":{}}}],["joi.object",{"_index":251,"title":{},"body":{"controllers/JobsController.html":{}}}],["joi.string().min(3).required",{"_index":252,"title":{},"body":{"controllers/JobsController.html":{}}}],["join",{"_index":467,"title":{},"body":{"index.html":{}}}],["joivalidationpipe",{"_index":226,"title":{"injectables/JoiValidationPipe.html":{}},"body":{"controllers/JobsController.html":{},"injectables/JoiValidationPipe.html":{},"coverage.html":{}}}],["kamil",{"_index":475,"title":{},"body":{"index.html":{}}}],["license",{"_index":481,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":457,"title":{},"body":{"index.html":{}}}],["list",{"_index":189,"title":{},"body":{"controllers/JobsController.html":{}}}],["literal",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["localhost",{"_index":299,"title":{},"body":{"modules/JobsModule.html":{}}}],["logginginterceptor",{"_index":222,"title":{"injectables/LoggingInterceptor.html":{}},"body":{"controllers/JobsController.html":{},"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["manager",{"_index":282,"title":{},"body":{"modules/JobsModule.html":{},"dependencies.html":{}}}],["matching",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Job.html":{},"classes/JobDTO.html":{},"classes/JobEntity.html":{},"classes/JobListDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":296,"title":{},"body":{"modules/JobsModule.html":{}}}],["message",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ValidationExceptionFilter.html":{}}}],["metadata",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":304,"title":{},"body":{"modules/JobsModule.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{}}}],["middleware/audit.middleware",{"_index":290,"title":{},"body":{"modules/JobsModule.html":{}}}],["middlewareconsumer",{"_index":275,"title":{},"body":{"modules/JobsModule.html":{}}}],["miscellaneous",{"_index":420,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":456,"title":{},"body":{"index.html":{}}}],["mode",{"_index":446,"title":{},"body":{"index.html":{}}}],["model",{"_index":309,"title":{},"body":{"injectables/JobsService.html":{}}}],["module",{"_index":43,"title":{"modules/AppModule.html":{},"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{}}}],["modules",{"_index":45,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":319,"title":{},"body":{"injectables/JobsService.html":{},"dependencies.html":{}}}],["mongoose.schema",{"_index":496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{}}}],["mongoosemodule.forfeature",{"_index":291,"title":{},"body":{"modules/JobsModule.html":{}}}],["mongoosemodule.forroot('mongodb://localhost:27017/jobs",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":470,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":476,"title":{},"body":{"index.html":{}}}],["name",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"classes/JobListDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{}}}],["nest",{"_index":434,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":480,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":355,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":396,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":398,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":149,"title":{},"body":{"classes/JobEntity.html":{},"controllers/JobsController.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":83,"title":{},"body":{"injectables/AuditMiddleware.html":{}}}],["nestmodule",{"_index":284,"title":{},"body":{"modules/JobsModule.html":{}}}],["new",{"_index":115,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{},"classes/ValidationExceptionFilter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":78,"title":{},"body":{"injectables/AuditMiddleware.html":{},"injectables/LoggingInterceptor.html":{}}}],["nextfunction",{"_index":79,"title":{},"body":{"injectables/AuditMiddleware.html":{}}}],["node.js",{"_index":426,"title":{},"body":{"index.html":{}}}],["now",{"_index":365,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["now}ms",{"_index":370,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["npm",{"_index":439,"title":{},"body":{"index.html":{}}}],["number",{"_index":68,"title":{},"body":{"injectables/AppService.html":{},"interfaces/Job.html":{},"classes/JobDTO.html":{},"classes/JobEntity.html":{},"miscellaneous/variables.html":{}}}],["objectschema",{"_index":333,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["observable",{"_index":354,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["open",{"_index":458,"title":{},"body":{"index.html":{}}}],["optional",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Job.html":{},"classes/JobListDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{}}}],["out",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"overview.html":{}}}],["overview",{"_index":485,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":394,"title":{"dependencies.html":{}},"body":{}}],["paid",{"_index":140,"title":{},"body":{"classes/JobEntity.html":{}}}],["param",{"_index":197,"title":{},"body":{"controllers/JobsController.html":{}}}],["param('id",{"_index":261,"title":{},"body":{"controllers/JobsController.html":{}}}],["parameters",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"classes/JobListDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{}}}],["path",{"_index":89,"title":{},"body":{"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"modules/JobsModule.html":{},"classes/ValidationExceptionFilter.html":{}}}],["pipe(tap",{"_index":368,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["pipes/validation.pipe",{"_index":227,"title":{},"body":{"controllers/JobsController.html":{}}}],["pipetransform",{"_index":338,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["please",{"_index":468,"title":{},"body":{"index.html":{}}}],["port",{"_index":300,"title":{},"body":{"modules/JobsModule.html":{}}}],["position",{"_index":141,"title":{},"body":{"classes/JobEntity.html":{}}}],["post",{"_index":198,"title":{},"body":{"controllers/JobsController.html":{}}}],["post()@apicreatedresponse({description",{"_index":167,"title":{},"body":{"controllers/JobsController.html":{}}}],["prefix",{"_index":162,"title":{},"body":{"controllers/JobsController.html":{}}}],["private",{"_index":321,"title":{},"body":{"injectables/JobsService.html":{}}}],["production",{"_index":448,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":425,"title":{},"body":{"index.html":{}}}],["project",{"_index":459,"title":{},"body":{"index.html":{}}}],["promise",{"_index":177,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/LoggingInterceptor.html":{}}}],["properties",{"_index":125,"title":{},"body":{"interfaces/Job.html":{},"classes/JobDTO.html":{},"classes/JobEntity.html":{},"classes/JobListDTO.html":{}}}],["providers",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{}}}],["public",{"_index":152,"title":{},"body":{"classes/JobListDTO.html":{}}}],["pug",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["put",{"_index":199,"title":{},"body":{"controllers/JobsController.html":{}}}],["put(':id",{"_index":259,"title":{},"body":{"controllers/JobsController.html":{}}}],["put(':id')@apiokresponse({description",{"_index":193,"title":{},"body":{"controllers/JobsController.html":{}}}],["read",{"_index":469,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"classes/JobDTO.html":{},"classes/JobEntity.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["redis",{"_index":279,"title":{},"body":{"modules/JobsModule.html":{},"dependencies.html":{}}}],["redisclientoptions",{"_index":278,"title":{},"body":{"modules/JobsModule.html":{}}}],["redisstore",{"_index":280,"title":{},"body":{"modules/JobsModule.html":{}}}],["reflect",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["removed",{"_index":266,"title":{},"body":{"controllers/JobsController.html":{}}}],["removed.'})@apiforbiddenresponse({status",{"_index":180,"title":{},"body":{"controllers/JobsController.html":{}}}],["render",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/JobsController.html":{}}}],["render('index",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["render('jobs/index",{"_index":237,"title":{},"body":{"controllers/JobsController.html":{}}}],["repository",{"_index":437,"title":{},"body":{"index.html":{}}}],["req",{"_index":81,"title":{},"body":{"injectables/AuditMiddleware.html":{},"injectables/LoggingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["req.body",{"_index":494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.body[data",{"_index":495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.headers",{"_index":92,"title":{},"body":{"injectables/AuditMiddleware.html":{}}}],["req.ip",{"_index":88,"title":{},"body":{"injectables/AuditMiddleware.html":{}}}],["req.method",{"_index":363,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["req.path",{"_index":90,"title":{},"body":{"injectables/AuditMiddleware.html":{}}}],["req.url",{"_index":361,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["request",{"_index":76,"title":{},"body":{"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["request.url",{"_index":117,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["requestmethod",{"_index":285,"title":{},"body":{"modules/JobsModule.html":{}}}],["requestmethod.delete",{"_index":305,"title":{},"body":{"modules/JobsModule.html":{}}}],["res",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["res.render('index",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["reset",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"overview.html":{}}}],["resource",{"_index":168,"title":{},"body":{"controllers/JobsController.html":{}}}],["response",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["response.status(status).json",{"_index":112,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["result",{"_index":245,"title":{},"body":{"controllers/JobsController.html":{}}}],["results",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Job.html":{},"classes/JobDTO.html":{},"classes/JobEntity.html":{},"classes/JobListDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":236,"title":{},"body":{"controllers/JobsController.html":{}}}],["returned.'})@apiforbiddenresponse({status",{"_index":185,"title":{},"body":{"controllers/JobsController.html":{}}}],["returns",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{}}}],["rimraf",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"controllers/JobsController.html":{}}}],["root(@res",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["root(res",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["run",{"_index":443,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":356,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":358,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["salary",{"_index":127,"title":{},"body":{"interfaces/Job.html":{},"classes/JobDTO.html":{},"classes/JobEntity.html":{},"controllers/JobsController.html":{},"miscellaneous/variables.html":{}}}],["scalable",{"_index":430,"title":{},"body":{"index.html":{}}}],["schema",{"_index":292,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JoiValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schemas/job.schema",{"_index":289,"title":{},"body":{"modules/JobsModule.html":{}}}],["server",{"_index":431,"title":{},"body":{"index.html":{}}}],["side",{"_index":432,"title":{},"body":{"index.html":{}}}],["socket",{"_index":298,"title":{},"body":{"modules/JobsModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Job.html":{},"classes/JobDTO.html":{},"classes/JobEntity.html":{},"classes/JobListDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{},"index.html":{}}}],["sponsors",{"_index":462,"title":{},"body":{"index.html":{}}}],["src/.../job.schema.ts",{"_index":490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../jobdata.decorator.ts",{"_index":489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":422,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:21",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":65,"title":{},"body":{"injectables/AppService.html":{}}}],["src/decorators/jobdata.decorator.ts",{"_index":381,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/filters/http",{"_index":95,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/filters/validation",{"_index":371,"title":{},"body":{"classes/ValidationExceptionFilter.html":{},"coverage.html":{}}}],["src/interceptor/logging.interceptor.ts",{"_index":347,"title":{},"body":{"injectables/LoggingInterceptor.html":{},"coverage.html":{}}}],["src/interceptor/logging.interceptor.ts:13",{"_index":352,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["src/jobs/dtos/job.dto.ts",{"_index":130,"title":{},"body":{"classes/JobDTO.html":{},"coverage.html":{}}}],["src/jobs/dtos/job.dto.ts:5",{"_index":134,"title":{},"body":{"classes/JobDTO.html":{}}}],["src/jobs/dtos/job.dto.ts:7",{"_index":132,"title":{},"body":{"classes/JobDTO.html":{}}}],["src/jobs/dtos/joblist.dto.ts",{"_index":151,"title":{},"body":{"classes/JobListDTO.html":{},"coverage.html":{}}}],["src/jobs/dtos/joblist.dto.ts:3",{"_index":156,"title":{},"body":{"classes/JobListDTO.html":{}}}],["src/jobs/dtos/joblist.dto.ts:4",{"_index":157,"title":{},"body":{"classes/JobListDTO.html":{}}}],["src/jobs/entities/job.entity.ts",{"_index":137,"title":{},"body":{"classes/JobEntity.html":{},"coverage.html":{}}}],["src/jobs/entities/job.entity.ts:15",{"_index":144,"title":{},"body":{"classes/JobEntity.html":{}}}],["src/jobs/entities/job.entity.ts:9",{"_index":147,"title":{},"body":{"classes/JobEntity.html":{}}}],["src/jobs/interfaces/job.interface.ts",{"_index":124,"title":{},"body":{"interfaces/Job.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts",{"_index":161,"title":{},"body":{"controllers/JobsController.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts:111",{"_index":195,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:122",{"_index":182,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:61",{"_index":191,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:72",{"_index":187,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:99",{"_index":175,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.module.ts",{"_index":272,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.module.ts:35",{"_index":276,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.service.ts",{"_index":306,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{}}}],["src/jobs/jobs.service.ts:11",{"_index":316,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:15",{"_index":315,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:19",{"_index":313,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:23",{"_index":317,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:27",{"_index":314,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:8",{"_index":310,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/schemas/job.schema.ts",{"_index":388,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":389,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middleware/audit.middleware.ts",{"_index":73,"title":{},"body":{"injectables/AuditMiddleware.html":{},"coverage.html":{}}}],["src/middleware/audit.middleware.ts:6",{"_index":80,"title":{},"body":{"injectables/AuditMiddleware.html":{}}}],["src/pipes/validation.pipe.ts",{"_index":330,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"coverage.html":{}}}],["src/pipes/validation.pipe.ts:10",{"_index":334,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["src/pipes/validation.pipe.ts:13",{"_index":336,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["start",{"_index":444,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":447,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":449,"title":{},"body":{"index.html":{}}}],["started",{"_index":424,"title":{"index.html":{}},"body":{}}],["starter",{"_index":436,"title":{},"body":{"index.html":{}}}],["statements",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":67,"title":{},"body":{"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"classes/ValidationExceptionFilter.html":{}}}],["statuscode",{"_index":113,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["stay",{"_index":472,"title":{},"body":{"index.html":{}}}],["store",{"_index":283,"title":{},"body":{"modules/JobsModule.html":{},"dependencies.html":{}}}],["string",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Job.html":{},"classes/JobDTO.html":{},"classes/JobEntity.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"miscellaneous/variables.html":{}}}],["successfully",{"_index":169,"title":{},"body":{"controllers/JobsController.html":{}}}],["support",{"_index":463,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":483,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":393,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":357,"title":{},"body":{"injectables/LoggingInterceptor.html":{}}}],["test",{"_index":452,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":455,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":454,"title":{},"body":{"index.html":{}}}],["tests",{"_index":451,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":461,"title":{},"body":{"index.html":{}}}],["then((result",{"_index":244,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.appservice.gethello",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["this.appservice.gethello().message",{"_index":40,"title":{},"body":{"controllers/AppController.html":{}}}],["this.jobmodel.create(job",{"_index":327,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find().exec",{"_index":323,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findbyidandremove(id).exec",{"_index":329,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findbyidandupdate(id",{"_index":328,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findone",{"_index":324,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobsservice",{"_index":243,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.create(jobdata",{"_index":258,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.delete(id",{"_index":269,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findall",{"_index":235,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findall().then((result",{"_index":238,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.update(id",{"_index":264,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.schema.validate(value",{"_index":343,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["throw",{"_index":246,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JoiValidationPipe.html":{}}}],["timestamp",{"_index":114,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["title",{"_index":128,"title":{},"body":{"interfaces/Job.html":{},"classes/JobDTO.html":{},"classes/JobEntity.html":{},"controllers/JobsController.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":473,"title":{},"body":{"index.html":{}}}],["transform",{"_index":331,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["transform(value",{"_index":335,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["transformer",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":256,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["ttl",{"_index":294,"title":{},"body":{"modules/JobsModule.html":{}}}],["twitter",{"_index":479,"title":{},"body":{"index.html":{}}}],["type",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Job.html":{},"classes/JobDTO.html":{},"classes/JobEntity.html":{},"classes/JobListDTO.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/LoggingInterceptor.html":{},"classes/ValidationExceptionFilter.html":{},"coverage.html":{}}}],["typescript",{"_index":435,"title":{},"body":{"index.html":{}}}],["ui",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":450,"title":{},"body":{"index.html":{}}}],["update",{"_index":165,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["update(id",{"_index":192,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["updated",{"_index":260,"title":{},"body":{"controllers/JobsController.html":{}}}],["updated.'})@apiforbiddenresponse({status",{"_index":194,"title":{},"body":{"controllers/JobsController.html":{}}}],["use",{"_index":74,"title":{},"body":{"injectables/AuditMiddleware.html":{}}}],["use(req",{"_index":75,"title":{},"body":{"injectables/AuditMiddleware.html":{}}}],["usefilters",{"_index":202,"title":{},"body":{"controllers/JobsController.html":{}}}],["usefilters(new",{"_index":231,"title":{},"body":{"controllers/JobsController.html":{}}}],["useinterceptors",{"_index":203,"title":{},"body":{"controllers/JobsController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":230,"title":{},"body":{"controllers/JobsController.html":{}}}],["usepipes",{"_index":201,"title":{},"body":{"controllers/JobsController.html":{}}}],["validatecustomdecorators",{"_index":255,"title":{},"body":{"controllers/JobsController.html":{}}}],["validation",{"_index":342,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["validationexceptionfilter",{"_index":174,"title":{"classes/ValidationExceptionFilter.html":{}},"body":{"controllers/JobsController.html":{},"classes/ValidationExceptionFilter.html":{},"coverage.html":{}}}],["validationpipe",{"_index":207,"title":{},"body":{"controllers/JobsController.html":{}}}],["validator",{"_index":135,"title":{},"body":{"classes/JobDTO.html":{},"dependencies.html":{}}}],["value",{"_index":337,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":382,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":488,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":82,"title":{},"body":{"injectables/AuditMiddleware.html":{},"classes/HttpExceptionFilter.html":{},"modules/JobsModule.html":{},"classes/ValidationExceptionFilter.html":{}}}],["watch",{"_index":445,"title":{},"body":{"index.html":{}}}],["website",{"_index":477,"title":{},"body":{"index.html":{}}}],["world",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":466,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        root\n                        \n                    \n                \n            \n            \n                \nroot(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Render, Res } from '@nestjs/common';\nimport { Response } from 'express';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  // @Get()\n  // getHello(): string {\n  //   return this.appService.getHello();\n  // }\n\n  // @Get()\n  // @Render('index')\n  // root() {\n  //   return this.appService.getHello();\n  // }\n\n  @Get()\n  root(@Res() res: Response) {\n    return res.render('index', {\n      message: this.appService.getHello().message,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nJobsModule\n\nJobsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            JobsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { JobsModule } from './jobs/jobs.module';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forRoot('mongodb://localhost:27017/jobs'),\n    JobsModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): { message?: string; status?: number } {\n    return { message: 'Hello World!', status: 200 };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuditMiddleware.html":{"url":"injectables/AuditMiddleware.html","title":"injectable - AuditMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuditMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/middleware/audit.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, _res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/middleware/audit.middleware.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable()\nexport class AuditMiddleware implements NestMiddleware {\n  use(req: Request, _res: Response, next: NextFunction) {\n    console.log(`Logging DELETE request IP => ${req.ip}`);\n    console.log(`Logging DELETE request Path => ${req.path}`);\n    console.log(`Logging DELETE request Headers => ${req.headers}`);\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/filters/http-exception.filter.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const request = ctx.getRequest();\n    const response = ctx.getResponse();\n    const status = exception.getStatus();\n\n    response.status(status).json({\n      statusCode: status,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n      desc: 'Http Error!',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Job.html":{"url":"interfaces/Job.html","title":"interface - Job","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/interfaces/job.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            salary\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        salary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        salary:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Job {\n  id?: string;\n  title: string;\n  salary: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JobDTO.html":{"url":"classes/JobDTO.html","title":"class - JobDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JobDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dtos/job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                salary\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dtos/job.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dtos/job.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsInt } from 'class-validator';\n\nexport class JobDTO {\n  @IsString()\n  readonly title: string;\n  @IsInt()\n  readonly salary: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JobEntity.html":{"url":"classes/JobEntity.html","title":"class - JobEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JobEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/entities/job.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                salary\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: Number, description: 'The salary to be paid for the job position', default: 5000})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/entities/job.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: String, description: 'The title of the job position', default: 'JavaScript Developer'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/entities/job.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class JobEntity {\n  @ApiProperty({\n    type: String,\n    description: 'The title of the job position',\n    default: 'JavaScript Developer',\n  })\n  readonly title: string;\n  @ApiProperty({\n    type: Number,\n    description: 'The salary to be paid for the job position',\n    default: 5000,\n  })\n  readonly salary: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JobListDTO.html":{"url":"classes/JobListDTO.html","title":"class - JobListDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JobListDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dtos/jobList.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                jobs\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobs: JobDTO[])\n                    \n                \n                        \n                            \n                                Defined in src/jobs/dtos/jobList.dto.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobs\n                                                  \n                                                        \n                                                                        JobDTO[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        jobs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JobDTO[]\n\n                    \n                \n                    \n                        \n                                Defined in src/jobs/dtos/jobList.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { JobDTO } from './job.dto';\n\nexport class JobListDTO {\n  constructor(public jobs: JobDTO[]) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                find\n                            \n                            \n                                root\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(jobData: JobDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiCreatedResponse({description: 'The resource has been successfully created.'})@ApiForbiddenResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: JobEntity})@UseFilters(new ValidationExceptionFilter())\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    jobData\n                                    \n                                                JobDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOkResponse({description: 'The resource has been successfully removed.'})@ApiForbiddenResponse({status: 403, description: 'Forbidden.'})\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOkResponse({status: 200, description: 'The resource has been successfully returned.'})@ApiForbiddenResponse({status: 403, description: 'Forbidden.'})@CacheTTL(30)\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        root\n                        \n                    \n                \n            \n            \n                \nroot()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({status: 200, description: 'The resource list has been successfully returned.'})@ApiForbiddenResponse({status: 403, description: 'Forbidden.'})@Render('jobs/index')\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, job: JobDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiOkResponse({description: 'The resource has been successfully updated.'})@ApiForbiddenResponse({status: 403, description: 'Forbidden.'})@ApiBody({type: JobEntity})\n                \n            \n\n            \n                \n                    Defined in src/jobs/jobs.controller.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    job\n                                    \n                                                JobDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Put,\n  HttpException,\n  HttpStatus,\n  // UsePipes,\n  UseFilters,\n  // UseFilters,\n  UseInterceptors,\n  CacheInterceptor,\n  // CacheKey,\n  CacheTTL,\n  Render,\n} from '@nestjs/common';\nimport { ValidationPipe } from '@nestjs/common';\nimport {\n  ApiTags,\n  ApiOkResponse,\n  ApiForbiddenResponse,\n  ApiCreatedResponse,\n  ApiBody,\n} from '@nestjs/swagger';\nimport { JobEntity } from './entities/job.entity';\n// import * as Joi from 'joi';\nimport { JobDTO } from './dtos/job.dto';\nimport { JobsService } from './jobs.service';\nimport { Job } from './interfaces/job.interface';\nimport { JobData } from '../decorators/jobdata.decorator';\nimport { ValidationExceptionFilter } from '../filters/validation-exception.filter';\nimport { LoggingInterceptor } from '../interceptor/logging.interceptor';\nimport { JobListDTO } from './dtos/jobList.dto';\n// import { HttpExceptionFilter } from '../filters/http-exception.filter';\n// import { JoiValidationPipe } from '../pipes/validation.pipe';\n\n@ApiTags('jobs')\n@Controller('jobs')\n@UseInterceptors(CacheInterceptor, LoggingInterceptor)\n// @UseFilters(new HttpExceptionFilter())\nexport class JobsController {\n  constructor(private readonly jobsService: JobsService) {}\n\n  // @Get()\n  // @CacheKey('allJobs')\n  // @CacheTTL(15)\n  // findAll(): Promise {\n  //   return this.jobsService.findAll();\n  // }\n\n  @Get()\n  @ApiOkResponse({\n    status: 200,\n    description: 'The resource list has been successfully returned.',\n  })\n  @ApiForbiddenResponse({ status: 403, description: 'Forbidden.' })\n  @Render('jobs/index')\n  root() {\n    return this.jobsService.findAll().then((result) => new JobListDTO(result));\n  }\n\n  @Get(':id')\n  @ApiOkResponse({\n    status: 200,\n    description: 'The resource has been successfully returned.',\n  })\n  @ApiForbiddenResponse({ status: 403, description: 'Forbidden.' })\n  @CacheTTL(30)\n  find(@Param('id') id: string): Promise {\n    return this.jobsService\n      .find(id)\n      .then((result) => {\n        if (result) return result;\n        throw new HttpException('Job Not Found', HttpStatus.NOT_FOUND);\n      })\n      .catch(() => {\n        throw new HttpException('Job Not Found', HttpStatus.NOT_FOUND);\n      });\n  }\n\n  @Post()\n  @ApiCreatedResponse({\n    description: 'The resource has been successfully created.',\n  })\n  @ApiForbiddenResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({ type: JobEntity })\n  // @UsePipes(\n  //   new JoiValidationPipe(\n  //     Joi.object({\n  //       title: Joi.string().min(3).required(),\n  //       salary: Joi.number().integer().min(400).max(5000).required(),\n  //     }),\n  //   ),\n  // )\n  @UseFilters(new ValidationExceptionFilter())\n  create(\n    @JobData(new ValidationPipe({ validateCustomDecorators: true }))\n    jobData: JobDTO,\n  ): Promise {\n    console.log('create: ', jobData);\n    return this.jobsService.create(jobData);\n  }\n\n  @Put(':id')\n  @ApiOkResponse({ description: 'The resource has been successfully updated.' })\n  @ApiForbiddenResponse({ status: 403, description: 'Forbidden.' })\n  @ApiBody({ type: JobEntity })\n  update(\n    @Param('id') id: string,\n    @Body(new ValidationPipe()) job: JobDTO,\n  ): Promise {\n    console.log('update: ', { id, job });\n    return this.jobsService.update(id, job);\n  }\n\n  @Delete(':id')\n  @ApiOkResponse({ description: 'The resource has been successfully removed.' })\n  @ApiForbiddenResponse({ status: 403, description: 'Forbidden.' })\n  delete(@Param('id') id: string): Promise {\n    console.log('delete: ', id);\n    return this.jobsService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService\n\nJobsService\n\n\n\nJobsModule\n\nJobsModule\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.module.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import type { RedisClientOptions } from 'redis';\nimport * as redisStore from 'cache-manager-redis-store';\nimport {\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n  CacheModule,\n} from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { JobsService } from './jobs.service';\nimport { JobsController } from './jobs.controller';\nimport { JobSchema } from './schemas/job.schema';\nimport { AuditMiddleware } from '../middleware/audit.middleware';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: 'Job', schema: JobSchema }]),\n    // CacheModule.register({\n    //   ttl: 5,\n    //   max: 10,\n    // }),\n    CacheModule.register({\n      store: redisStore,\n      socket: {\n        host: 'localhost',\n        port: 6379,\n      },\n    }),\n  ],\n  controllers: [JobsController],\n  providers: [JobsService],\n})\nexport class JobsModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(AuditMiddleware)\n      .forRoutes({ path: 'jobs/*', method: RequestMethod.DELETE });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/jobs/jobs.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(job: JobDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                                JobDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                    \n                    find(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, job: JobDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/jobs/jobs.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    job\n                                    \n                                                JobDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Job } from './interfaces/job.interface';\nimport { JobDTO } from './dtos/job.dto';\n\n@Injectable()\nexport class JobsService {\n  constructor(@InjectModel('Job') private readonly jobModel: Model) {}\n\n  async findAll(): Promise {\n    return await this.jobModel.find().exec();\n  }\n\n  async find(id: string): Promise {\n    return await this.jobModel.findOne({ _id: id }).exec();\n  }\n\n  async create(job: JobDTO): Promise {\n    return await this.jobModel.create(job);\n  }\n\n  async update(id: string, job: JobDTO): Promise {\n    return await this.jobModel.findByIdAndUpdate(id, job, { new: true });\n  }\n\n  async delete(id: string): Promise {\n    return await this.jobModel.findByIdAndRemove(id).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JoiValidationPipe.html":{"url":"injectables/JoiValidationPipe.html","title":"injectable - JoiValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JoiValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pipes/validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(schema: ObjectSchema)\n                    \n                \n                        \n                            \n                                Defined in src/pipes/validation.pipe.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        schema\n                                                  \n                                                        \n                                                                        ObjectSchema\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/validation.pipe.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  PipeTransform,\n  Injectable,\n  ArgumentMetadata,\n  BadRequestException,\n} from '@nestjs/common';\nimport { ObjectSchema } from 'joi';\n\n@Injectable()\nexport class JoiValidationPipe implements PipeTransform {\n  constructor(private schema: ObjectSchema) {}\n\n  transform(value: any) {\n    console.log('- value validation: ', value);\n    const { error } = this.schema.validate(value);\n    if (error) {\n      console.log('here error: ', error);\n      throw new BadRequestException('Validation failed');\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingInterceptor.html":{"url":"injectables/LoggingInterceptor.html","title":"injectable - LoggingInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggingInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interceptor/logging.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/interceptor/logging.interceptor.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Request } from 'express';\n\n@Injectable()\nexport class LoggingInterceptor implements NestInterceptor {\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | Promise> {\n    const ctx = context.switchToHttp();\n    const req: Request = ctx.getRequest();\n    console.log(`Endpoint: ${req.url}`);\n    console.log(`Method: ${req.method}`);\n\n    console.log('Before...');\n    const now = Date.now();\n    return next\n      .handle()\n      .pipe(tap(() => console.log(`After...${Date.now() - now}ms`)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationExceptionFilter.html":{"url":"classes/ValidationExceptionFilter.html","title":"class - ValidationExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filters/validation-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/filters/validation-exception.filter.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  BadRequestException,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch(BadRequestException)\nexport class ValidationExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const request = ctx.getRequest();\n    const response = ctx.getResponse();\n    const status = exception.getStatus();\n    const message = exception.message;\n\n    console.log('== exception == ', exception);\n\n    response.status(status).json({\n      statusCode: status,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n      desc: message,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/decorators/jobdata.decorator.ts\n            \n            variable\n            JobData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/filters/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/filters/validation-exception.filter.ts\n            \n            class\n            ValidationExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/interceptor/logging.interceptor.ts\n            \n            injectable\n            LoggingInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/jobs/dtos/job.dto.ts\n            \n            class\n            JobDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/jobs/dtos/jobList.dto.ts\n            \n            class\n            JobListDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/jobs/entities/job.entity.ts\n            \n            class\n            JobEntity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/jobs/interfaces/job.interface.ts\n            \n            interface\n            Job\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/jobs/jobs.controller.ts\n            \n            controller\n            JobsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            variable\n            JobSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            variable\n            Schema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/middleware/audit.middleware.ts\n            \n            injectable\n            AuditMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/pipes/validation.pipe.ts\n            \n            injectable\n            JoiValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/mongoose : ^9.0.2\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.0\n        \n            cache-manager : ^3.6.0\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            hbs : ^4.2.0\n        \n            joi : ^17.6.0\n        \n            mongoose : ^6.2.0\n        \n            pug : ^3.0.2\n        \n            redis : ^4.0.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.3.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsModule\n\nJobsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            JobData   (src/.../jobdata.decorator.ts)\n                        \n                        \n                            JobSchema   (src/.../job.schema.ts)\n                        \n                        \n                            Schema   (src/.../job.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/decorators/jobdata.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JobData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string, ctx: ExecutionContext) => {\n    const req: Request = ctx.switchToHttp().getRequest();\n    return data ? req.body && req.body[data] : req.body;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/jobs/schemas/job.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JobSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Schema({\n  title: String,\n  salary: Number,\n})\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Schema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mongoose.Schema\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
